// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MasterFasilitas {
  fasilitas_id   String            @id @default(uuid()) @db.Uuid
  nama_fasilitas String            @db.VarChar(255)
  kategori       FasilitasKategori
  icon           String?           @db.VarChar(100)
  is_active      Boolean           @default(true)
  created_at     DateTime          @default(now())
  updated_at     DateTime          @updatedAt

  kost_fasilitas KostFasilitas[]
  // Relasi kamar_fasilitas dihapus karena model Kamar tidak ada lagi
  // kamar_fasilitas KamarFasilitas[] // <-- DIHAPUS

  @@map("master_fasilitas")
}

model MasterTipeKamar {
  tipe_id    String   @id @default(uuid()) @db.Uuid
  nama_tipe  String   @db.VarChar(100)
  ukuran     String?  @db.VarChar(50)
  kapasitas  Int
  deskripsi  String?  @db.Text
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Relasi kamar dihapus karena model Kamar tidak ada lagi
  // kamar Kamar[] // <-- DIHAPUS

  // Tambahkan relasi ke model Kost yang baru akan memiliki tipe kamar
  kost Kost[] @relation("KostTipeKamar") // Relasi baru dari MasterTipeKamar ke Kost

  @@map("master_tipe_kamar")
}

model MasterPeraturan {
  peraturan_id   String            @id @default(uuid()) @db.Uuid
  nama_peraturan String            @db.VarChar(255)
  kategori       PeraturanKategori
  icon           String?           @db.VarChar(100)
  is_active      Boolean           @default(true)
  created_at     DateTime          @default(now())
  updated_at     DateTime          @updatedAt

  kost_peraturan  KostPeraturan[]
  // Relasi kamar_peraturan dihapus karena model Kamar tidak ada lagi
  // kamar_peraturan KamarPeraturan[] // <-- DIHAPUS

  @@map("master_peraturan")
}

model MasterLayananLaundry {
  layanan_id   String   @id @default(uuid()) @db.Uuid
  nama_layanan String   @db.VarChar(255)
  satuan       String   @db.VarChar(20)
  is_active    Boolean  @default(true)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  laundry_harga LaundryHarga[]

  @@map("master_layanan_laundry")
}

model Users {
  user_id         String    @id @default(uuid()) @db.Uuid
  email           String    @unique @db.VarChar(255)
  username        String    @unique @db.VarChar(100)
  password        String?   @db.VarChar(255)
  role            UserRole
  full_name       String    @db.VarChar(255)
  phone           String?   @db.VarChar(20)
  whatsapp_number String?   @db.VarChar(20)
  is_approved     Boolean   @default(false)
  is_guest        Boolean   @default(false)
  google_id       String?   @unique
  avatar          String?   @db.Text
  email_verified  Boolean   @default(false)
  last_login      DateTime?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt

  kost_managed                 Kost[]               @relation("PengelolaKost")
  reservasi                    Reservasi[] // Tetap ada, relasi akan ke Kost nanti
  pesanan_catering             PesananCatering[]
  pesanan_laundry              PesananLaundry[]
  validated_reservasi          Reservasi[]          @relation("ValidatedBy")
  verified_pembayaran_catering PembayaranCatering[] @relation("VerifiedBy")
  verified_pembayaran_laundry  PembayaranLaundry[]  @relation("VerifiedBy")

  @@map("users")
}

model Kost {
  kost_id                 String   @id @default(uuid()) @db.Uuid
  pengelola_id            String   @db.Uuid
  nama_kost               String   @db.VarChar(255)
  alamat                  String   @db.Text
  gmaps_link              String?  @db.Text
  deskripsi               String?  @db.Text
  total_kamar             Int      // Menunjukkan total unit kamar dari tipe yang sama
  daya_listrik            String?  @db.VarChar(50)
  sumber_air              String?  @db.VarChar(100)
  wifi_speed              String?  @db.VarChar(100)
  kapasitas_parkir_motor  Int      @default(0)
  kapasitas_parkir_mobil  Int      @default(0)
  kapasitas_parkir_sepeda Int      @default(0)
  biaya_tambahan          Decimal? @db.Decimal(10, 2)
  jam_survey              String?  @db.VarChar(50)
  foto_kost               Json?    @default("[]") // FOTO KOS DIGUNAKAN UNTUK MEWAKILI FOTO KAMAR JUGA
  qris_image              String?  @db.Text
  rekening_info           Json?
  is_approved             Boolean  @default(false)
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt

  // ATRIBUT DARI MODEL KAMAR YANG DIPINDAHKAN KE SINI:
  tipe_id       String      @db.Uuid // Mengacu ke tipe kamar utama/tunggal untuk kos ini
  harga_bulanan Decimal     @db.Decimal(10, 2)
  deposit       Decimal     @db.Decimal(10, 2)
  // status KamarStatus @default(TERSEDIA) // <-- PERTIMBANGAN: status kamar bisa jadi per unit. Jika ini di Kost, berarti semua kamar punya status sama. Lebih baik ini dihapus atau dihandle secara logis di aplikasi jika kos masih punya kamar 'terisi' dan 'kosong'
  
  pengelola      Users           @relation("PengelolaKost", fields: [pengelola_id], references: [user_id], onDelete: Cascade)
  tipe           MasterTipeKamar @relation("KostTipeKamar", fields: [tipe_id], references: [tipe_id]) // Relasi baru ke MasterTipeKamar

  // Relasi kamar dihapus, reservasi akan langsung ke Kost
  // kamar          Kamar[] // <-- DIHAPUS

  catering       Catering[]
  laundry        Laundry[]
  kost_fasilitas KostFasilitas[]
  kost_peraturan KostPeraturan[]

  reservasi      Reservasi[] // Relasi baru: Reservasi akan langsung ke Kost ini

  @@map("kost")
}

// Model Kamar DIHAPUS SEPENUHNYA

model KostFasilitas {
  kost_id      String @db.Uuid
  fasilitas_id String @db.Uuid

  kost      Kost            @relation(fields: [kost_id], references: [kost_id], onDelete: Cascade)
  fasilitas MasterFasilitas @relation(fields: [fasilitas_id], references: [fasilitas_id], onDelete: Cascade)

  @@id([kost_id, fasilitas_id])
  @@map("kost_fasilitas")
}

// Model KamarFasilitas DIHAPUS SEPENUHNYA
// model KamarFasilitas {
//   kamar_id     String @db.Uuid
//   fasilitas_id String @db.Uuid

//   kamar     Kamar           @relation(fields: [kamar_id], references: [kamar_id], onDelete: Cascade)
//   fasilitas MasterFasilitas @relation(fields: [fasilitas_id], references: [fasilitas_id], onDelete: Cascade)

//   @@id([kamar_id, fasilitas_id])
//   @@map("kamar_fasilitas")
// }

model KostPeraturan {
  kost_id             String  @db.Uuid
  peraturan_id        String  @db.Uuid
  keterangan_tambahan String? @db.Text

  kost      Kost            @relation(fields: [kost_id], references: [kost_id], onDelete: Cascade)
  peraturan MasterPeraturan @relation(fields: [peraturan_id], references: [peraturan_id], onDelete: Cascade)

  @@id([kost_id, peraturan_id])
  @@map("kost_peraturan")
}

// Model KamarPeraturan DIHAPUS SEPENUHNYA
// model KamarPeraturan {
//   kamar_id            String  @db.Uuid
//   peraturan_id        String  @db.Uuid
//   keterangan_tambahan String? @db.Text

//   kamar     Kamar           @relation(fields: [kamar_id], references: [kamar_id], onDelete: Cascade)
//   peraturan MasterPeraturan @relation(fields: [peraturan_id], references: [peraturan_id], onDelete: Cascade)

//   @@id([kamar_id, peraturan_id])
//   @@map("kamar_peraturan")
// }

model Reservasi {
  reservasi_id     String          @id @default(uuid()) @db.Uuid
  user_id          String          @db.Uuid
  kost_id          String          @db.Uuid // <-- DIUBAH: Dulu kamar_id, sekarang kost_id
  tanggal_check_in DateTime        @db.Date
  durasi_bulan     Int
  total_harga      Decimal         @db.Decimal(12, 2)
  bukti_bayar      String?         @db.Text
  status           ReservasiStatus @default(PENDING_PAYMENT)
  metode_bayar     MetodeBayar?
  catatan          String?         @db.Text
  rejection_reason String?         @db.Text
  validated_by     String?         @db.Uuid
  validated_at     DateTime?
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt

  user      Users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  kost      Kost      @relation(fields: [kost_id], references: [kost_id], onDelete: Cascade) // <-- DIUBAH relasi
  validator Users?    @relation("ValidatedBy", fields: [validated_by], references: [user_id])
  penghuni  Penghuni?

  @@map("reservasi")
}

model Penghuni {
  penghuni_id    String         @id @default(uuid()) @db.Uuid
  reservasi_id   String         @unique @db.Uuid
  tanggal_masuk  DateTime       @db.Date
  tanggal_keluar DateTime?      @db.Date
  deposit        Decimal        @db.Decimal(10, 2)
  status         PenghuniStatus @default(AKTIF)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt

  reservasi Reservasi @relation(fields: [reservasi_id], references: [reservasi_id], onDelete: Cascade)

  @@map("penghuni")
}

// Model Catering, CateringMenu, PesananCatering, PembayaranCatering, Laundry, LaundryHarga, PesananLaundry, PembayaranLaundry, Enums tetap sama
// ... (Model-model di bawah ini tidak berubah) ...

model Catering {
  catering_id     String   @id @default(uuid()) @db.Uuid
  kost_id         String   @db.Uuid
  nama_catering   String   @db.VarChar(255)
  alamat          String   @db.Text
  whatsapp_number String?  @db.VarChar(20)
  qris_image      String?  @db.Text
  rekening_info   Json?
  is_partner      Boolean  @default(false)
  is_active       Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  kost Kost           @relation(fields: [kost_id], references: [kost_id], onDelete: Cascade)
  menu CateringMenu[]

  @@map("catering")
}

model CateringMenu {
  menu_id      String           @id @default(uuid()) @db.Uuid
  catering_id  String           @db.Uuid
  nama_menu    String           @db.VarChar(255)
  kategori     CateringKategori
  harga        Decimal          @db.Decimal(8, 2)
  foto_menu    String?          @db.Text
  is_available Boolean          @default(true)
  created_at   DateTime         @default(now())
  updated_at   DateTime @updatedAt

  catering Catering          @relation(fields: [catering_id], references: [catering_id], onDelete: Cascade)
  pesanan  PesananCatering[]

  @@map("catering_menu")
}

model PesananCatering {
  pesanan_id   String                @id @default(uuid()) @db.Uuid
  user_id      String                @db.Uuid
  menu_id      String                @db.Uuid
  jumlah_porsi Int                   @default(1)
  total_harga  Decimal               @db.Decimal(8, 2)
  status       PesananCateringStatus @default(PENDING)
  catatan      String?               @db.Text
  created_at   DateTime              @default(now())
  updated_at   DateTime              @updatedAt

  user       Users               @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  menu       CateringMenu        @relation(fields: [menu_id], references: [menu_id], onDelete: Cascade)
  pembayaran PembayaranCatering?

  @@map("pesanan_catering")
}

model PembayaranCatering {
  pembayaran_id String           @id @default(uuid()) @db.Uuid
  pesanan_id    String           @unique @db.Uuid
  jumlah        Decimal          @db.Decimal(8, 2)
  metode        MetodeBayar
  bukti_bayar   String?          @db.Text
  status        StatusPembayaran @default(PENDING)
  verified_by   String?          @db.Uuid
  verified_at   DateTime?
  catatan       String?          @db.Text
  created_at    DateTime         @default(now())
  updated_at    DateTime @updatedAt

  pesanan  PesananCatering @relation(fields: [pesanan_id], references: [pesanan_id], onDelete: Cascade)
  verifier Users?          @relation("VerifiedBy", fields: [verified_by], references: [user_id])

  @@map("pembayaran_catering")
}

model Laundry {
  laundry_id      String   @id @default(uuid()) @db.Uuid
  kost_id         String   @db.Uuid
  nama_laundry    String   @db.VarChar(255)
  alamat          String   @db.Text
  whatsapp_number String?  @db.VarChar(20)
  qris_image      String?  @db.Text
  rekening_info   Json?
  is_partner      Boolean  @default(false)
  is_active       Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  kost            Kost             @relation(fields: [kost_id], references: [kost_id], onDelete: Cascade)
  laundry_harga   LaundryHarga[]
  pesanan_laundry PesananLaundry[]

  @@map("laundry")
}

model LaundryHarga {
  harga_id         String   @id @default(uuid()) @db.Uuid
  laundry_id       String   @db.Uuid
  layanan_id       String   @db.Uuid
  harga_per_satuan Decimal  @db.Decimal(8, 2)
  is_available     Boolean  @default(true)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  layanan MasterLayananLaundry @relation(fields: [layanan_id], references: [layanan_id], onDelete: Cascade)
  laundry Laundry              @relation(fields: [laundry_id], references: [laundry_id], onDelete: Cascade)

  @@map("laundry_harga")
}

model PesananLaundry {
  pesanan_id       String               @id @default(uuid()) @db.Uuid
  user_id          String               @db.Uuid
  laundry_id       String               @db.Uuid
  detail_layanan   Json
  total_estimasi   Decimal              @db.Decimal(8, 2)
  total_final      Decimal?             @db.Decimal(8, 2)
  berat_actual     Decimal?             @db.Decimal(5, 2)
  tanggal_antar    DateTime?
  estimasi_selesai DateTime?
  status           PesananLaundryStatus @default(ORDER)
  catatan          String?              @db.Text
  created_at       DateTime             @default(now())
  updated_at       DateTime @updatedAt

  user       Users              @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  laundry    Laundry            @relation(fields: [laundry_id], references: [laundry_id], onDelete: Cascade)
  pembayaran PembayaranLaundry?

  @@map("pesanan_laundry")
}

model PembayaranLaundry {
  pembayaran_id String           @id @default(uuid()) @db.Uuid
  pesanan_id    String           @unique @db.Uuid
  jumlah        Decimal          @db.Decimal(8, 2)
  metode        MetodeBayar
  bukti_bayar   String?          @db.Text
  status        StatusPembayaran @default(PENDING)
  verified_by   String?          @db.Uuid
  verified_at   DateTime?
  catatan       String?          @db.Text
  created_at    DateTime         @default(now())
  updated_at    DateTime @updatedAt

  pesanan  PesananLaundry @relation(fields: [pesanan_id], references: [pesanan_id], onDelete: Cascade)
  verifier Users?         @relation("VerifiedBy", fields: [verified_by], references: [user_id])

  @@map("pembayaran_laundry")
}

enum UserRole {
  ADMIN
  PENGELOLA
  PENGHUNI
  TAMU
}

enum FasilitasKategori {
  UMUM
  KAMAR
  KAMAR_MANDI
  PARKIR
}

enum PeraturanKategori {
  TIPE_KAMAR
  KOST_UMUM
}

enum KamarStatus {
  TERSEDIA
  TERISI
  MAINTENANCE
}

enum ReservasiStatus {
  PENDING_PAYMENT
  WAITING_VALIDATION
  APPROVED
  REJECTED
  EXPIRED
}

enum PenghuniStatus {
  AKTIF
  KELUAR
}

enum CateringKategori {
  MAKANAN_BERAT
  SNACK
  MINUMAN
}

enum PesananCateringStatus {
  PENDING
  CONFIRMED
  READY
  COMPLETED
  CANCELLED
}

enum PesananLaundryStatus {
  ORDER
  DITERIMA
  PROSES
  SELESAI
  DIAMBIL
}

enum MetodeBayar {
  QRIS
  TRANSFER
  CASH
}

enum StatusPembayaran {
  PENDING
  UPLOADED
  VERIFIED
  FAILED
}
